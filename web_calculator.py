import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#–°—Ç–∏–ª–∏ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown("""
<style>
    body {
        backgrounf-color: #1e1e1e;
        color: white;
    }
    .stButtom button {
        backgrounf-color: #4CAF50:
        color: white;
        font-size: 16px;
        padding: 10px 20px;
        border-radius: 5px;
    }
    .stNumberInput input {
        background-color: #333333;
        color: white;
    }
    .stDataFrame {
        border: 1px solid #4CAF50;
    }        
>/style>
""", unsafe_allow_html=True)

#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏
if "–∏—Å—Ç–æ—Ä–∏—è" not in st.session_state:
    st.session_state["–∏—Å—Ç–æ—Ä–∏—è"] = []

class –í–µ–±–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:
    def __init__(self):
        st.title("–í–µ–±-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")

    def –∑–∞–ø—É—Å—Ç–∏—Ç—å(self):
        —á–∏—Å–ª–æ1 = st.number_input("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ", format="%f")
        —á–∏—Å–ª–æ2 = st.number_input("–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ", format="%f")

        col1, col2, col3, col4, col5, col6 = st.columns(6)

        if col1.button("–°–ª–æ–∂–∏—Ç—å"):
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = self.—Å–ª–æ–∂–∏—Ç—å(—á–∏—Å–ª–æ1, —á–∏—Å–ª–æ2)
            st.success(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")
            st.session_state["–∏—Å—Ç–æ—Ä–∏—è"].append(f"{—á–∏—Å–ª–æ1} + {—á–∏—Å–ª–æ2} = {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")

        if col2.button("–í—ã—á–µ—Å—Ç—å"):
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = self.–≤—ã—á–µ—Å—Ç—å(—á–∏—Å–ª–æ1, —á–∏—Å–ª–æ2)
            st.success(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")
            st.session_state["–∏—Å—Ç–æ—Ä–∏—è"].append(f"{—á–∏—Å–ª–æ1} - {—á–∏—Å–ª–æ2} = {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")

        if col3.button("–£–º–Ω–æ–∂–∏—Ç—å"):
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = self.—É–º–Ω–æ–∂–∏—Ç—å(—á–∏—Å–ª–æ1, —á–∏—Å–ª–æ2)
            st.success(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")
            st.session_state["–∏—Å—Ç–æ—Ä–∏—è"].append(f"{—á–∏—Å–ª–æ1} * {—á–∏—Å–ª–æ2} = {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")

        if col4.button("–†–∞–∑–¥–µ–ª–∏—Ç—å"):
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = self.—Ä–∞–∑–¥–µ–ª–∏—Ç—å(—á–∏—Å–ª–æ1, —á–∏—Å–ª–æ2)
            if "–û—à–∏–±–∫–∞" in str(—Ä–µ–∑—É–ª—å—Ç–∞—Ç):
                st.error(—Ä–µ–∑—É–ª—å—Ç–∞—Ç)
            else:
                st.success(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")
            st.session_state["–∏—Å—Ç–æ—Ä–∏—è"].append(f"{—á–∏—Å–ª–æ1} / {—á–∏—Å–ª–æ2} = {—Ä–µ–∑—É–ª—å—Ç–∞—Ç}")

        if col5.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
            self.–æ—á–∏—Å—Ç–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é()

        if col6.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
            self.–∑–∞–≥—Ä—É–∑–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é()

        st.markdown("---")
        if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
            if st.session_state["–∏—Å—Ç–æ—Ä–∏—è"]:
                st.write("### üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:")
                for –∑–∞–ø–∏—Å—å in st.session_state["–∏—Å—Ç–æ—Ä–∏—è"]:
                    if "–û—à–∏–±–∫–∞" in –∑–∞–ø–∏—Å—å:
                        st.markdown(f"<p style='color:red;'>{–∑–∞–ø–∏—Å—å}</p>", unsafe_allow_html=True)
                    else:
                        st.markdown(f"<p style='color:#4CAF50;'>{–∑–∞–ø–∏—Å—å}</p>", unsafe_allow_html=True)
            else:
                st.markdown("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞")

        #–ì—Ä–∏—Ñ–∏–∫ –∏—Å—Ç–æ—Ä–∏–∏
        if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫"):
            if st.session_state["–∏—Å—Ç–æ—Ä–∏—è"]:
                import matplotlib.pyplot as plt
                import seaborn as sns

                —Å–ª–æ–∂–µ–Ω–∏–µ = [–∑–∞–ø–∏—Å—å for –∑–∞–ø–∏—Å—å in st.session_state["–∏—Å—Ç–æ—Ä–∏—è"] if "+" in –∑–∞–ø–∏—Å—å]
                –∑–Ω–∞—á–µ–Ω–∏—è = [float(–∑–∞–ø–∏—Å—å.split("=")[1].strip()) for –∑–∞–ø–∏—Å—å in —Å–ª–æ–∂–µ–Ω–∏–µ]

                if –∑–Ω–∞—á–µ–Ω–∏—è:
                    st.write("###üìä –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–ª–æ–∂–µ–Ω–∏—è")
                    fig, ax = plt.subplots()
                    sns.lineplot(y=–∑–Ω–∞—á–µ–Ω–∏—è, x=range(1, len(–∑–Ω–∞—á–µ–Ω–∏—è)+1), ax=ax, marker="o", color="#4CAF50")
                    ax.set_xlabel("–û–ø–µ—Ä–∞—Ü–∏—è")
                    ax.set_ylabel("–†–µ–∑—É–ª—å—Ç–∞—Ç")
                    st.pyplot(fig)
                else:
                    st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞")
            else:
                st.warning("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ - –Ω–µ—á–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å")

        #–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ CSV"):
            self.—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é()

        #–û—Ç–ª–∞–¥–∫–∞
        if st.checkbox("DEBUG: –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ"):
            st.write("###DEBUG:", st.session_state["–∏—Å—Ç–æ—Ä–∏—è"])

    def —Å–ª–æ–∂–∏—Ç—å(self, a, b):
        return a + b

    def –≤—ã—á–µ—Å—Ç—å(self, a, b):
        return a - b

    def —É–º–Ω–æ–∂–∏—Ç—å(self, a, b):
        return a * b

    def —Ä–∞–∑–¥–µ–ª–∏—Ç—å(self, a, b):
        if b != 0:
            return a / b
        else:
            return "–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!"

    def —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é(self, —Ñ–∞–π–ª="history.csv"):
        if st.session_state["–∏—Å—Ç–æ—Ä–∏—è"]:
            df = pd.DataFrame({"–ò—Å—Ç–æ—Ä–∏—è": st.session_state["–∏—Å—Ç–æ—Ä–∏—è"]})
            df.to_csv(—Ñ–∞–π–ª, index=False)
            st.success(f"–ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {—Ñ–∞–π–ª}")
        else:
            st.warning("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ - –Ω–µ—á–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å")

    def –æ—á–∏—Å—Ç–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é(self):
        st.session_state["–∏—Å—Ç–æ—Ä–∏—è"] = []
        st.info("–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞")

    def –∑–∞–≥—Ä—É–∑–∏—Ç—å_–∏—Å—Ç–æ—Ä–∏—é(self, —Ñ–∞–π–ª="history.csv"):
        try:
            df = pd.read_csv(—Ñ–∞–π–ª)
            if "–ò—Å—Ç–æ—Ä–∏—è" in df.columns:
                st.session_state["–∏—Å—Ç–æ—Ä–∏—è"] = df["–ò—Å—Ç–æ—Ä–∏—è"].tolist()
                st.success("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞")
            else:
                st.warning("–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π")
        except FileNotFoundError:
            st.warning("–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")

        # –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    calc = –í–µ–±–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä()
    calc.–∑–∞–ø—É—Å—Ç–∏—Ç—å()

